SET SERVEROUTPUT ON;

BEGIN
EXECUTE IMMEDIATE 'DROP ROLE CUSTOMER_ROLE';
EXCEPTION
WHEN OTHERS THEN
    IF SQLCODE = -1924 THEN
     DBMS_OUTPUT.PUT_LINE('CREATING ROLE CUSTOMER_ROLE');
    END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP ROLE SUPPLIER_ROLE';
EXCEPTION
WHEN OTHERS THEN
    IF SQLCODE = -1924 THEN
     DBMS_OUTPUT.PUT_LINE('CREATING ROLE SUPPLIER_ROLE');
    END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP ROLE LOGISTICS_ROLE';
EXCEPTION
WHEN OTHERS THEN
    IF SQLCODE = -1924 THEN
     DBMS_OUTPUT.PUT_LINE('CREATING ROLE LOGISCTIC_ROLE');
    END IF;
END;
/

CREATE ROLE CUSTOMER_ROLE;
GRANT SELECT, INSERT ON ORDERS TO CUSTOMER_ROLE;
GRANT SELECT, INSERT, UPDATE ON PRODUCTORDER TO CUSTOMER_ROLE;
<<<<<<< Updated upstream
GRANT SELECT, INSERT, UPDATE ON CUSTOMERS TO CUSTOMER_ROLE;
=======
GRANT SELECT, INSERT, UPDATE, DELETE ON CUSTOMERS TO CUSTOMER_ROLE;
GRANT SELECT ON orders_seq TO CUSTOMER_ROLE;
GRANT SELECT ON productorder_seq TO CUSTOMER_ROLE;
GRANT SELECT ON customers_seq TO CUSTOMER_ROLE;
>>>>>>> Stashed changes

CREATE ROLE SUPPLIER_ROLE;
GRANT SELECT, INSERT, UPDATE ON PRODUCTS TO SUPPLIER_ROLE;
GRANT SELECT, INSERT,  UPDATE ON SUPPLIERS TO SUPPLIER_ROLE;
GRANT SELECT, UPDATE ON PRODUCTSUPPLY TO SUPPLIER_ROLE;

CREATE ROLE LOGISTICS_ROLE;
GRANT SELECT ON PRODUCTS TO LOGISTICS_ROLE;
GRANT SELECT ON CATEGORIES TO LOGISTICS_ROLE;
GRANT SELECT ON SUPPLIERS TO LOGISTICS_ROLE;
GRANT SELECT, UPDATE ON ORDERS TO LOGISTICS_ROLE;
GRANT SELECT ON CUSTOMERS TO LOGISTICS_ROLE;

<<<<<<< Updated upstream
=======
-- Creating and Granting privileges to Manager Role --
CREATE ROLE MANAGER_ROLE;
GRANT SELECT, INSERT, DELETE, UPDATE ON PRODUCTS TO MANAGER_ROLE;
GRANT SELECT, INSERT, DELETE, UPDATE ON CATEGORIES TO MANAGER_ROLE;
GRANT SELECT, INSERT, DELETE, UPDATE ON DISCOUNTS TO MANAGER_ROLE;
GRANT SELECT, INSERT, DELETE, UPDATE ON SUPPLIERS TO MANAGER_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON ORDERS TO MANAGER_ROLE;
GRANT SELECT,INSERT, UPDATE, DELETE  ON PRODUCTORDER TO MANAGER_ROLE;
GRANT SELECT, INSERT, DELETE, UPDATE ON PRODUCTSUPPLY TO MANAGER_ROLE;
GRANT SELECT, INSERT, DELETE, UPDATE ON CUSTOMERS TO MANAGER_ROLE;
GRANT SELECT ON products_seq TO MANAGER_ROLE;
GRANT SELECT ON categories_seq TO MANAGER_ROLE;
GRANT SELECT ON discounts_seq TO MANAGER_ROLE;
GRANT SELECT ON suppliers_seq TO MANAGER_ROLE;
GRANT SELECT ON productsupply_seq TO MANAGER_ROLE;
GRANT SELECT ON customers_seq TO MANAGER_ROLE;
>>>>>>> Stashed changes

DECLARE
V_USER VARCHAR(100);
V_DROP_SQL VARCHAR(500);
BEGIN
FOR I IN (
WITH DESIRED_USERS AS (
SELECT 'CUSTOMER' USERNAME FROM DUAL
UNION ALL
SELECT 'SUPPLIER' FROM DUAL
UNION ALL
SELECT 'LOGISTIC_ADMIN' FROM DUAL
)
SELECT DU.USERNAME FROM DESIRED_USERS DU JOIN ALL_USERS AU ON DU.USERNAME = AU.USERNAME
)
LOOP
EXECUTE IMMEDIATE 'DROP USER ' || I.USERNAME || ' CASCADE';
END LOOP;
EXCEPTION
WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('SOMETHING WENT WRONG. CONTACT ADMIN');
END;
/

CREATE USER CUSTOMER IDENTIFIED BY "TeamRelationalNinjas2023#";
GRANT CUSTOMER_ROLE TO CUSTOMER;
GRANT CONNECT,RESOURCE TO CUSTOMER;

CREATE USER SUPPLIER IDENTIFIED BY "TeamRelationalNinjas2023#";
GRANT SUPPLIER_ROLE TO SUPPLIER;
GRANT CONNECT,RESOURCE TO SUPPLIER;

CREATE USER LOGISTIC_ADMIN IDENTIFIED BY "TeamRelationalNinjas2023#";
GRANT LOGISTICS_ROLE TO LOGISTIC_ADMIN;
GRANT CONNECT,RESOURCE TO LOGISTIC_ADMIN;





